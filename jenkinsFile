def boolean build_results = false
pipeline {
    agent any

    stages {

        stage("before notifier"){
          steps {
            publishChecks conclusion: 'NONE', detailsURL: '${JENKINS_URL}', name: 'SCA and build', status: 'IN_PROGRESS', title: 'SCA and build'
          }
        }

        stage("SonarQube analysis"){
          steps {
            withSonarQubeEnv("mysonarqube"){
              bat 'mvn sonar:sonar'
            }
          }
        }

        stage("Quality Gate") {
            steps {
                timeout(time: 5,unit: 'MINUTES'){
                  waitForQualityGate abortPipeline: true
                }
              }
        }

        stage('build') {
            steps {
                catchError(buildResult: 'SUCCESS', stageResult: 'FAILURE') {

                    bat 'mvn clean package'

                    //
                    // If we reached here the above step hasn't failed
                    //
                    script { build_results = true }
                }
            }
        }

        stage('after notifier') {
            steps {
                script{
                    if( build_results == true ) {
                        publishChecks detailsURL: '${JENKINS_URL}', name: 'SCA and build', title: 'SCA and build'
                    } else {
                        publishChecks conclusion: 'FAILURE', detailsURL: '${JENKINS_URL}', name: 'SCA and build', title: 'SCA and build'
                    }
                }
            }
        }

    }
}
